import TaelinArena.Game

enum
| GRIMER_IDLE
| GRIMER_EARTH_BALL
| GRIMER_INVINCIBLE_MUD
| GRIMER_MUD_SHIELD
| GRIMER_MUD_TSUNAMI
| GRIMER_EXTRA
| GRIMER_TAUNT

base_earth_ball_dmg : Number 
  2

base_mud_tsunami_dmg : Number 
  3

grimer_fun(self: Thing) : Thing
  let self = self <= thing(mov = 2.5, mhp = 24)

  case self |thing switch self.act

  |GRIMER_IDLE
    if is_walking(self)
    then animate(self, 1, GRIMER_WALK_000, 7, 14)
    else animate(self, 1, GRIMER_IDLE_000, 7, 14)

  // Left 
  |GRIMER_EARTH_BALL
    let self = animate(self, 1, GRIMER_EARTH_BALL_CAST_000, 11, 22)
    let ball = new_thing <= thing(
      fun = grimer_earth_ball_fun,
      pos = self.pos,
      dir = self.dir,
      vel = scale_v3(10, targ_dir(self)),
      box = nbox,
    )
    let self = spawn(self, 8, [ball])
    self 

  // Middle
  |GRIMER_INVINCIBLE_MUD
    let shield_buff = shielded(31, 1000) //an ignorant amount 
    let self = set_thing_buf(self, cons(_ shield_buff, self.buf))
    let self = animate_between(self, 0, GRIMER_INVINCIBLE_MUD_000, 6, 0, 6)
    let self = animate_between(self, 0, GRIMER_INVINCIBLE_MUD_006, 7, 6, 24)
    let self = animate_between(self, 0, GRIMER_INVINCIBLE_MUD_012, 7, 24, 31)
    let self = reset(self, 31)
    self 

  // Right
  |GRIMER_MUD_SHIELD
    let shield_buff = shielded(30, 1000)
    let self = set_thing_buf(self, cons(_ shield_buff, self.buf))
    let self = animate(self, 0, GRIMER_MUD_SHIELD_000, 30, 60) 
    let shield_box = pbox([ 
      v3(0,0,0),v3(15,45,0),v3(25,45,0),v3(25,-45,0),v3(15,-45,0),   
    ])
    let self = set_thing_box(self, shield_box)
    //requires reset to set cbox(12)
    let self = reset(self, 60)
    self

  // Q
  |GRIMER_MUD_TSUNAMI
    grimer_mud_tsunami_fun(self)

  // Space
  | GRIMER_EXTRA
    let self = animate(self, 1, GRIMER_TRANSFORMATION_000, 13, 26)
    let self = create_at(self, 25, muk_fun)
    let evolved = set_thing_nam(self, "Muk")
    evolved

  // E
  | GRIMER_TAUNT
    animate(self, 0, GRIMER_TAUNT_000, 15, 30)


  else self


// Effects
grimer_earth_ball_fun(self: Thing) : Thing 
  case self |thing
  let self   = animate_die(self, 0, GRIMER_EARTH_BALL_EFFECT_000, 7, 14)
  let self   = self <= thing(box = nbox)
  let radius = 20
  let effs   = [damage(base_earth_ball_dmg)]
  let hits   = [hit(effs, self.pos, self.dir, cbox(radius))]
  let self = cast(self,  4, hits)
  let self = cast(self,  8, hits)
  let self = cast(self, 12, hits)
  let self = cast(self, 16, hits)
  let self = cast(self, 20, hits) 
  self

grimer_mud_tsunami_fun(self: Thing) : Thing 
  case self |thing 
  let self = animate(self, 1, GRIMER_MUD_TSUNAMI_000, 17, 34)
  let effs = [damage(base_mud_tsunami_dmg)]
  let h1   = [hit(effs, self.pos, self.dir, cbox(30))] 
  let h2   = [hit(effs, self.pos, self.dir, cbox(40))] 
  let self = cast(self, 10, h1)
  let self = cast(self, 20, h2)
  self 



// MUK
// ---- 

enum
| MUK_IDLE
| MUK_EARTH_BALL
| MUK_INVINCIBLE_MUD
| MUK_MUD_SHIELD
| MUK_MUD_TSUNAMI
| MUK_EXTRA
| MUK_TAUNT

muk_fun(self: Thing) : Thing
  let self = self <= thing(mov = 2, mhp = 24)

  case self |thing switch self.act

  |MUK_IDLE
    if is_walking(self)
    then animate(self, 1, MUK_WALK_000, 8, 24)
    else animate(self, 1, MUK_IDLE_000, 8, 24)

  // Left 
  |MUK_EARTH_BALL
    let self = animate(self, 1, MUK_EARTH_BALL_CAST_000, 12, 24)
    let ball = new_thing <= thing(
      fun = muk_earth_ball_fun,
      pos = self.pos,
      dir = self.dir,
      vel = scale_v3(10, targ_dir(self)),
      box = nbox)
    let self = spawn(self, 8, [ball])
    self 

  // Middle
  |MUK_INVINCIBLE_MUD
    let shield_buff = shielded(26, 1000) //an ignorant amount 
    let self = set_thing_buf(self, cons(_ shield_buff, self.buf))
    let self = animate(self, 0, MUK_INVINCIBLE_MUD_000, 26, 52)
    self 

  // Right
  |MUK_MUD_SHIELD
    let shield_buff = shielded(30, 1000)
    let self = animate(self, 0, MUK_MUD_SHIELD_000, 24, 48)
    let shield_box = pbox([ 
      v3(0,0,0),v3(15,45,0),v3(25,45,0),v3(25,-45,0),v3(15,-45,0),   
    ])
    let self = set_thing_box(self, shield_box)
    let self = reset(self, 60)
    self


  // Q
  |MUK_MUD_TSUNAMI
    muk_mud_tsunami_fun(self)

  // Space
  | MUK_EXTRA
    animate(self, 1, MUK_IDLE_000, 8, 16)

  // E
  | MUK_TAUNT
    animate(self, 0, MUK_TAUNT_000, 18, 36)


  else self

// Effects
muk_earth_ball_fun(self: Thing) : Thing 
  case self |thing
  let self   = animate_die(self, 0, MUK_EARTH_BALL_EFFECT_000, 7, 14)
  let self   = self <= thing(box = nbox)
  let radius = 20
  let effs   = [damage(base_earth_ball_dmg * 2)]
  let hits   = [hit(effs, self.pos, self.dir, cbox(radius))]
  let self = cast(self,  4, hits)
  let self = cast(self,  8, hits)
  let self = cast(self, 12, hits)
  let self = cast(self, 16, hits)
  let self = cast(self, 20, hits) 
  self 


muk_mud_tsunami_fun(self: Thing) : Thing 
  case self |thing 
  let self = animate(self, 1, MUK_MUD_TSUNAMI_000, 19, 38)
  let effs = [damage(base_mud_tsunami_dmg * 2)]
  let h1   = [hit(effs, self.pos, self.dir, cbox(30))] 
  let h2   = [hit(effs, self.pos, self.dir, cbox(60))] 
  let self = cast(self, 10, h1)
  let self = cast(self, 20, h2)
  self